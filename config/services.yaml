# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    doctrine_file_path: '%kernel.project_dir%/config/packages/doctrine.yaml'
    env_file_path: '%kernel.project_dir%/.env'
    logoDirectory: '%kernel.project_dir%/public/logo/'
    uploadDirectory: '%kernel.project_dir%/public/upload/'
    uploadAuthorizedMimeTypes:
        image:
            - jpeg
            - png
        video:
            -
        
    logoAuthorizedMimeTypes:
        - png
        - jpeg
        
    passwordResetTokenTimer: 1 # 1h
    mailer_user: noreply@infoway.fr
    mailer_password: Annesivy1974

services:
    # default configuration for services in *this* file

    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\CustomerListener:
        tags:
            -
                name: doctrine.orm.entity_listener
                event: postLoad
                entity: App\Entity\Admin\Customer
#                # entity_manager attribute is optional
#                entity_manager: custom
                # method attribute is optional
                method: initializeSites

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\UserListener:
        arguments:
            $doctrine: ['@doctrine']
        tags:
            - name: doctrine.orm.entity_listener
              event: postLoad
              entity: App\Entity\Admin\User
                #                # entity_manager attribute is optional
                #                entity_manager: custom
                # method attribute is optional
              method: initializeSites

    Symfony\Component\HttpKernel\Profiler\Profiler: '@profiler'